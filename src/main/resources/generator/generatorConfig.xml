<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
  PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
  "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>

    <context id="test" targetRuntime="MyBatis3">

        <property name="autoDelimitKeywords" value="true"/>
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>

        <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"></plugin>
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"></plugin>
        <!--内存分页page plugin-->
<!--        <plugin type="org.mybatis.generator.plugins.RowBoundsPlugin"></plugin>-->

        <!--page plugin-->
<!--        这里的插件 必须依赖jar包 不然报错 找不到 mybatis-generator-plus 这个包 保留下来 后面或许可以用到-->
        <plugin type="org.mybatis.generator.plugins.MyLimitPlugin"/>

        <!--生成mapper.xml时覆盖原文件  一直报错 还没有看到原因-->
<!--        <plugin type="org.mybatis.generator.plugins.UnmergeableXmlMappersPlugin" />-->

        <!-- 这里的type里写的是你的实现类的类全路径 -->
        <commentGenerator type="org.mybatis.generator.internal.DefaultCommentGenerator">
            <!-- 这个元素用来去除指定生成的注释中是否包含生成的日期 false:表示保护 -->
            <!-- 如果生成日期，会造成即使修改一个字段，整个实体类所有属性都会发生变化，不利于版本控制，所以设置为true -->
            <property name="suppressDate" value="true" />
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true" />
        </commentGenerator>

        <!--数据库链接URL，用户名、密码 -->

        <jdbcConnection driverClass="com.mysql.jdbc.Driver" connectionURL="jdbc:mysql:///schedule?serverTimezone=UTC"
          userId="root" password="123456">
        </jdbcConnection>

        <!--Java类型解析器, 目前也就只有forceBigDecimals可以给你玩-->
        <javaTypeResolver>
            <!--当数据类型为DECIMAL或者NUMERIC的时候, 如果是true的话则总是使用java.math.BigDecimal-->
            <!--以下是false, 即默认值的情况-->
            <!--如果有小数或者decimal长度大于18, Java类型为BigDecimal-->
            <!--如果没有小数, 以及decimal长度为10至18, Java类型为Long-->
            <!--如果没有小数, 以及decimal长度为5至9, Java类型为Integer-->
            <!--如果没有小数, 以及decimal长度少于5, Java类型为Short-->
            <!-- This property is used to specify whether MyBatis Generator should
                force the use of java.math.BigDecimal for DECIMAL and NUMERIC fields, -->
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <!--Domain生成器-->
        <javaModelGenerator targetPackage="com.spring.schedule.pojo"
          targetProject="F:\myspace\schedule\src\main\java">
            <!--据说可以自动添加schema名, 可是我没用到过-->
            <property name="enableSubPackages" value="true" />

            <!--生成全属性构造器, 没什么用, 如果有指定immutable元素的话这个会被忽略-->
<!--            <property name="constructorBased" value="true"/>-->

            <!--生成不可变的domain, 这个我也很少用-->
<!--            <property name="immutable" value="true"/>-->

            <!--每个Domain都继承这个bean-->
<!--            <property name="rootClass" value="com.github.prontera.domain.base.BasicEntity"/>-->

            <!--当遇到String的时候setter是否会先trim()-->
            <property name="trimStrings" value="true" />
        </javaModelGenerator>

        <!-- 生成XML映射文件的包名和位置 -->
        <sqlMapGenerator targetPackage="mapper"
          targetProject="F:\myspace\schedule\src\main\resources">
            <property name="enableSubPackages" value="true" />
        </sqlMapGenerator>

        <!-- 生成DAO的包名和位置 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.spring.schedule.mapper"
          targetProject="F:\myspace\schedule\src\main\java">
            <property name="enableSubPackages" value="true" />
        </javaClientGenerator>


<!--       要生成哪些表-->

        <table tableName="dy_quartz_job" domainObjectName="DyQuartzJob"
            enableCountByExample="true" enableUpdateByExample="true"
            enableDeleteByExample="false" enableSelectByExample="true"
            selectByExampleQueryId="true">

            <!--指定是否用数据库中真实的字段名, 而不是采用MBG转换后的驼峰-->
<!--            <property name="useActualColumnNames" value="true"/>-->

            <!--columnOverride是table的子元素, column必填属性为数据表的字段名-->
            <!--property属性指定生成的Java字段名, 这个设定会覆盖table中的property元素中的useActualColumnNames属性-->
            <!--typeHandler属性就是指定Mapping typeHandler的, 如果要修改Model中的请使用javaType-->
            <!--isGeneratedAlways属性为true的时候则Mapping中不会出现此字段的insert或update操作-->
<!--            <columnOverride column="DATE_FIELD" property="startDate"/>-->

            <!--自动集成改类-->
<!--            <property name="rootClass" value="com.github.prontera.domain.base.HelloBasicClass"/>-->

            <!--Mapper自动继承的接口-->
<!--            <property name="rootInterface" value="com.github.prontera.Mapper"/>-->

            <!--当遇到String的时候setter是否会先trim()-->
<!--            <property name="trimStrings" value="true"/>-->

            <!--先进行columnRenamingRule, 再进行useActualColumnNames. 如果有columnOverride则忽略该配置-->
            <!--关于columnRenamingRule的具体例子 http://www.mybatis.org/generator/configreference/columnRenamingRule.html-->
<!--            <columnRenamingRule searchString="^CUST_" replaceString=""/>-->

            <!--顾名思义, 忽略某些列-->
<!--            <ignoreColumn column="CREATE_TIME"/>-->

            <!--也是忽略数据列, 但是可以通过正则表达式, except子元素是可选的, 代表忽略除UPDATE_TIME外的列-->
<!--            <ignoreColumnsByRegex pattern=".*_TIME$">-->
<!--                <except column="UPDATE_TIME"/>-->
<!--            </ignoreColumnsByRegex>-->
        </table>


    </context>
</generatorConfiguration>