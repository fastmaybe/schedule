<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.schedule.mapper.DyQuartzJobMapper">
  <resultMap id="BaseResultMap" type="com.spring.schedule.pojo.DyQuartzJob">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="group" jdbcType="VARCHAR" property="group" />
    <result column="invoke_class" jdbcType="VARCHAR" property="invokeClass" />
    <result column="invoke_method" jdbcType="VARCHAR" property="invokeMethod" />
    <result column="params" jdbcType="VARCHAR" property="params" />
    <result column="cron" jdbcType="VARCHAR" property="cron" />
    <result column="misFirePolicy" jdbcType="INTEGER" property="misfirepolicy" />
    <result column="concurrent" jdbcType="INTEGER" property="concurrent" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `name`, `desc`, `group`, invoke_class, invoke_method, params, cron, misFirePolicy, 
    concurrent, `status`
  </sql>
  <select id="selectByExample" parameterType="com.spring.schedule.pojo.DyQuartzJobExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from dy_quartz_job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dy_quartz_job
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dy_quartz_job
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.spring.schedule.pojo.DyQuartzJob">
    insert into dy_quartz_job (id, `name`, `desc`, 
      `group`, invoke_class, invoke_method, 
      params, cron, misFirePolicy, 
      concurrent, `status`)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, 
      #{group,jdbcType=VARCHAR}, #{invokeClass,jdbcType=VARCHAR}, #{invokeMethod,jdbcType=VARCHAR}, 
      #{params,jdbcType=VARCHAR}, #{cron,jdbcType=VARCHAR}, #{misfirepolicy,jdbcType=INTEGER}, 
      #{concurrent,jdbcType=INTEGER}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.spring.schedule.pojo.DyQuartzJob">
    insert into dy_quartz_job
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="desc != null">
        `desc`,
      </if>
      <if test="group != null">
        `group`,
      </if>
      <if test="invokeClass != null">
        invoke_class,
      </if>
      <if test="invokeMethod != null">
        invoke_method,
      </if>
      <if test="params != null">
        params,
      </if>
      <if test="cron != null">
        cron,
      </if>
      <if test="misfirepolicy != null">
        misFirePolicy,
      </if>
      <if test="concurrent != null">
        concurrent,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="group != null">
        #{group,jdbcType=VARCHAR},
      </if>
      <if test="invokeClass != null">
        #{invokeClass,jdbcType=VARCHAR},
      </if>
      <if test="invokeMethod != null">
        #{invokeMethod,jdbcType=VARCHAR},
      </if>
      <if test="params != null">
        #{params,jdbcType=VARCHAR},
      </if>
      <if test="cron != null">
        #{cron,jdbcType=VARCHAR},
      </if>
      <if test="misfirepolicy != null">
        #{misfirepolicy,jdbcType=INTEGER},
      </if>
      <if test="concurrent != null">
        #{concurrent,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.spring.schedule.pojo.DyQuartzJobExample" resultType="java.lang.Long">
    select count(*) from dy_quartz_job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dy_quartz_job
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.desc != null">
        `desc` = #{record.desc,jdbcType=VARCHAR},
      </if>
      <if test="record.group != null">
        `group` = #{record.group,jdbcType=VARCHAR},
      </if>
      <if test="record.invokeClass != null">
        invoke_class = #{record.invokeClass,jdbcType=VARCHAR},
      </if>
      <if test="record.invokeMethod != null">
        invoke_method = #{record.invokeMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.params != null">
        params = #{record.params,jdbcType=VARCHAR},
      </if>
      <if test="record.cron != null">
        cron = #{record.cron,jdbcType=VARCHAR},
      </if>
      <if test="record.misfirepolicy != null">
        misFirePolicy = #{record.misfirepolicy,jdbcType=INTEGER},
      </if>
      <if test="record.concurrent != null">
        concurrent = #{record.concurrent,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dy_quartz_job
    set id = #{record.id,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=VARCHAR},
      `desc` = #{record.desc,jdbcType=VARCHAR},
      `group` = #{record.group,jdbcType=VARCHAR},
      invoke_class = #{record.invokeClass,jdbcType=VARCHAR},
      invoke_method = #{record.invokeMethod,jdbcType=VARCHAR},
      params = #{record.params,jdbcType=VARCHAR},
      cron = #{record.cron,jdbcType=VARCHAR},
      misFirePolicy = #{record.misfirepolicy,jdbcType=INTEGER},
      concurrent = #{record.concurrent,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.spring.schedule.pojo.DyQuartzJob">
    update dy_quartz_job
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="group != null">
        `group` = #{group,jdbcType=VARCHAR},
      </if>
      <if test="invokeClass != null">
        invoke_class = #{invokeClass,jdbcType=VARCHAR},
      </if>
      <if test="invokeMethod != null">
        invoke_method = #{invokeMethod,jdbcType=VARCHAR},
      </if>
      <if test="params != null">
        params = #{params,jdbcType=VARCHAR},
      </if>
      <if test="cron != null">
        cron = #{cron,jdbcType=VARCHAR},
      </if>
      <if test="misfirepolicy != null">
        misFirePolicy = #{misfirepolicy,jdbcType=INTEGER},
      </if>
      <if test="concurrent != null">
        concurrent = #{concurrent,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.spring.schedule.pojo.DyQuartzJob">
    update dy_quartz_job
    set `name` = #{name,jdbcType=VARCHAR},
      `desc` = #{desc,jdbcType=VARCHAR},
      `group` = #{group,jdbcType=VARCHAR},
      invoke_class = #{invokeClass,jdbcType=VARCHAR},
      invoke_method = #{invokeMethod,jdbcType=VARCHAR},
      params = #{params,jdbcType=VARCHAR},
      cron = #{cron,jdbcType=VARCHAR},
      misFirePolicy = #{misfirepolicy,jdbcType=INTEGER},
      concurrent = #{concurrent,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>